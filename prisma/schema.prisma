generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Room {
  id          String   @id @default(cuid())
  name        String
  description String?
  tags        String[]
  rules       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  messages    Message[]
  posts       Post[]
  comments    Comment[]

  @@map("rooms")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String?  @unique
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  messages   Message[]
  posts      Post[]
  comments   Comment[]

  @@map("users")
}

model Message {
  id        String   @id @default(cuid())
  text      String
  author    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@map("messages")
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String
  author    String
  views     Int      @default(0)
  likes     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  comments  Comment[]

  @@map("posts")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  author    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  postId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@map("comments")
}

model AISync {
  id        String   @id @default(cuid())
  roomId    String
  userId    String
  timestamp DateTime @default(now())

  @@unique([roomId, userId])
  @@map("ai_syncs")
}

